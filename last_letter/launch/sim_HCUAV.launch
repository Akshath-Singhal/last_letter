<!-- Launch file for the simulator core /-->

<launch>

	<arg name="clockSim" value="false"/>	<!-- Choose Reatime/Simulated clock /-->

	<!-- Initialization of parameters -->
	<group>	
		<param if="$(arg clockSim)" name="use_sim_time" type="bool" value="true" />
		<rosparam command="load" file="$(find last_letter)data/parameters/environment.yaml" />
		<rosparam command="load" file="$(find last_letter)data/parameters/world.yaml" />
	</group>

	<!-- Initialization of services -->
	<group>
	</group>
	


	<!-- First UAV Group -->
	<arg name="uav_name" value="fw1"/>	
	<group ns="$(arg uav_name)">
		
		<!-- Initialization of the parameters -->
		<rosparam command="load" file="$(find last_letter)data/parameters/HCUAV.yaml" />
		<rosparam command="load" file="$(find last_letter)data/parameters/Sensors_parameters.yaml" />
		<rosparam command="load" file="$(find last_letter)data/parameters/controller.yaml" />
		
		<!-- Raising core nodes -->
		<group>
			<node pkg="rosbag" name="recorder" type="record" args="-O UAV_recording.bag states wrenchStamped input"/>
			<node if="$(arg clockSim)" name="clock" pkg="last_letter" type="clock.py" />
			<node pkg="last_letter" name="plane_model" type="model" output="screen">
				<remap from="ctrlPWM" to="rawPWM"/>
			</node>
			<node pkg="last_letter" name="environment_model" type="environment" output="screen"/>
			<node pkg="last_letter" name="euler_translator" type="quat2euler" output="screen"/>
		</group>
		
		<!-- Transformations broadcasters -->
		<group>
			<!-- transform body NED to body NWU -->
			<node pkg="tf" type="static_transform_publisher" name="body2Cockpit" args="0.0 0.0 0.0 0.0 0.0 3.14 base_link plane_camera 10" />
			<!-- publish body NWU frame for rviz-->
			<node pkg="last_letter" type="uav_publisher" name="broadcaster" />
		</group>
		
		<!-- Raising sensor nodes -->
		<group>
<!--			<node pkg="last_letter" name="Accelerometer" type="accelerometer.py" output="screen"/>-->
<!--			<node pkg="last_letter" name="Altimeter" type="altimeter.py" output="screen"/>-->
<!--			<node pkg="last_letter" name="Barometer" type="barometer.py" output="screen"/>-->
<!--			<node pkg="last_letter" name="Gyroscope" type="gyroscope.py" output="screen"/>-->
<!--			<node pkg="last_letter" name="GPS" type="GPS.py" output="screen"/>-->
<!--			<node pkg="last_letter" name="Magnetometer" type="magnetometer.py" output="screen"/>-->
		</group>
		
		<!-- Raising controller nodes -->
		<group>
<!--			<node pkg="last_letter" name="Autopilot" type="autopilot" output="screen"/>-->
		</group>
		
		<!-- Input nodes -->
		<group>
<!--			<node pkg="last_letter" name="virtualJoy" type="virtualJoy" output="screen" />-->
			<node pkg="joy" type="joy_node" name="joystick" output="screen" >
				<param name="dev" value="/dev/input/js0" />
				<param name="deadzone" value="0.01" />
			</node>
			<node pkg="last_letter" name="joy2chan" type="joy2chan" />
		</group>
	
	</group>
	
</launch>
